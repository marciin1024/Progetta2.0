@page "/"
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject ProjectService ProjectService
@inject TaskService TaskService



<PageTitle>Progetta</PageTitle>

<div class="main-content py-2">
    <DxGridLayout CssClass="welcome-gridlayout" RowSpacing="3rem">
        <Rows>
            <DxGridLayoutRow Height="auto" Areas="header"></DxGridLayoutRow>
            <DxGridLayoutRow Height="auto" Areas="cards"></DxGridLayoutRow>
        </Rows>
        <Items>
            <DxGridLayoutItem Area="header" CssClass="title">
                <Template>
                    <div class="title-header-text">Witaj user!</div>
                    <div class="title-header-text" style="text-align: left;">Twoje projekty:</div>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Area="cards" CssClass="welcome-cards">
                <Template>
                    @if (Projects?.Any() == true)
                    {
                        foreach (var project in Projects
                        .OrderByDescending(p => p.UpdatedAt ?? DateTime.MinValue) 
                        .Take(5))
                        {
                            <NavLink class="welcome-card" href="@($"/projects?projectId={project.Id}")">
                                <div class="welcome-card-text">
                                    <span>@project.Name</span>
                                    <br> 
                                    <div class="welcome-card-subtext">
                                    <span>
                                        @(project.Category != null && !string.IsNullOrEmpty(project.Category.Name)
                                            ? project.Category.Name : "Brak kategorii")
                                    </span>
                                    <br>
                                    <span>
                                        Termin: 
                                        @(project.DueDate.HasValue
                                            ? project.DueDate.Value.ToString("dd-MM-yyyy") : "Brak daty")
                                    </span>
                                    <span>Współpracownicy:</span>
                                    </div> 
                                </div> 
                                <div class="welcome-card-back"></div>
                            </NavLink>
                        }
                    }
                    else
                    {
                        <div class="no-projects-message">
                            Brak dostępnych projektów.
                        </div>
                    }
                </Template>
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
    
    <div class="task-container"> 
        <h5 class="taskCard-title h5-title">Twoje zadania:</h5>
        <DxTreeView AllowSelectNodes="true"
                    CssClass="dxTreeView"
                    AnimationType="LayoutAnimationType.Slide">
            <Nodes>
                <DxTreeViewNode Text="Dzisiaj">
                    <Nodes>
                        <DxTreeViewNode class="list-node" Text="Dzisiaj" >
                            <Template>
                                <div class="grid-container">
                                    <DxGrid @ref="Grid"
                                            PageSize="15"
                                            Data="@TodayTasks"
                                            KeyFieldName="Id"
                                            ValidationEnabled="false"
                                            ColumnResizeMode="GridColumnResizeMode.NextColumn"
                                            TextWrapEnabled="false"
                                            HighlightRowOnHover="true">

                                        <Columns>
                                            <DxGridDataColumn FieldName="Name" MinWidth="350" />
                                            <DxGridDataColumn FieldName="Status" MinWidth="80" />
                                            <DxGridDataColumn FieldName="Priority" MinWidth="200" />
                                            <DxGridDataColumn FieldName="Project" Width="10%" MinWidth="80">
                                                <EditSettings>
                                                    <DxComboBoxSettings Data="Projects" ValueFieldName="Id" TextFieldName="Name" />
                                                </EditSettings>
                                            </DxGridDataColumn>
                                            <DxGridDataColumn FieldName="DueDate" Width="10%" MinWidth="80" />
                                            <DxGridCommandColumn Width="30px">
                                                <HeaderTemplate Context="headerContext"/>
                                                <CellDisplayTemplate Context="cellContext">
                                                    <div class="grid-cell-align-center">
                                                        <DxButton IconCssClass="grid-icon grid-icon-open"
                                                                  RenderStyle="ButtonRenderStyle.None"
                                                                  Click="@(() => ShowForm(cellContext.VisibleIndex))" />
                                                    </div>
                                                </CellDisplayTemplate>
                                                
                                            </DxGridCommandColumn>
                                        </Columns>
                                    </DxGrid>

                                    <TaskToDoForm Task="Task" Visible="TaskToDoFormVisible" SetVisiblity="SetVisiblity" />
                                </div>
                            </Template>
                        </DxTreeViewNode>
                    </Nodes>
                </DxTreeViewNode>                
                <DxTreeViewNode Text="W tym tygodniu">
                    <Nodes>
                        <DxTreeViewNode Text="Dzisiaj">
                            <Template>
                                <div class="grid-container">
                                    <DxGrid @ref="Grid"
                                            PageSize="15"
                                            Data="@ThisWeekTasks"
                                            KeyFieldName="Id"
                                            ValidationEnabled="false"
                                            ColumnResizeMode="GridColumnResizeMode.NextColumn"
                                            TextWrapEnabled="false"
                                            HighlightRowOnHover="true">

                                        <Columns>
                                            <DxGridDataColumn FieldName="Name" MinWidth="350" />
                                            <DxGridDataColumn FieldName="Status" MinWidth="80" />
                                            <DxGridDataColumn FieldName="Priority" MinWidth="200" />
                                            <DxGridDataColumn FieldName="Project" Width="10%" MinWidth="80">
                                                <EditSettings>
                                                    <DxComboBoxSettings Data="Projects" ValueFieldName="Id" TextFieldName="Name" />
                                                </EditSettings>
                                            </DxGridDataColumn>
                                            <DxGridDataColumn FieldName="DueDate" Width="10%" MinWidth="80" />
                                            <DxGridCommandColumn Width="30px">
                                                <HeaderTemplate Context="headerContext"/>
                                                <CellDisplayTemplate Context="cellContext">
                                                    <div class="grid-cell-align-center">
                                                        <DxButton IconCssClass="grid-icon grid-icon-open"
                                                                  RenderStyle="ButtonRenderStyle.None"
                                                                  Click="@(() => ShowForm(cellContext.VisibleIndex))" />
                                                    </div>
                                                </CellDisplayTemplate>
                                            </DxGridCommandColumn>
                                        </Columns>
                                    </DxGrid>

                                    <TaskToDoForm Task="Task" Visible="TaskToDoFormVisible" SetVisiblity="SetVisiblity" />
                                </div>
                            </Template>
                        </DxTreeViewNode>
                    </Nodes>
                </DxTreeViewNode>
                <DxTreeViewNode Text="W następnym tygodniu">
                    <Nodes>
                        <DxTreeViewNode Text="Dzisiaj">
                            <Template>
                                <div class="grid-container">
                                    <DxGrid @ref="Grid"
                                            PageSize="15"
                                            Data="@NextWeekTasks"
                                            KeyFieldName="Id"
                                            ValidationEnabled="false"
                                            ColumnResizeMode="GridColumnResizeMode.NextColumn"
                                            TextWrapEnabled="false"
                                            HighlightRowOnHover="true">

                                        <Columns>
                                            <DxGridDataColumn FieldName="Name" MinWidth="350" />
                                            <DxGridDataColumn FieldName="Status" MinWidth="80" />
                                            <DxGridDataColumn FieldName="Priority" MinWidth="200" />
                                            <DxGridDataColumn FieldName="Project" Width="10%" MinWidth="80">
                                                <EditSettings>
                                                    <DxComboBoxSettings Data="Projects" ValueFieldName="Id" TextFieldName="Name" />
                                                </EditSettings>
                                            </DxGridDataColumn>
                                            <DxGridDataColumn FieldName="DueDate" Width="10%" MinWidth="80" />
                                            <DxGridCommandColumn Width="30px">
                                                <HeaderTemplate Context="headerContext"/>
                                                <CellDisplayTemplate Context="cellContext">
                                                    <div class="grid-cell-align-center">
                                                        <DxButton IconCssClass="grid-icon grid-icon-open"
                                                                  RenderStyle="ButtonRenderStyle.None"
                                                                  Click="@(() => ShowForm(cellContext.VisibleIndex))" />
                                                    </div>
                                                </CellDisplayTemplate>
                                            </DxGridCommandColumn>
                                        </Columns>
                                    </DxGrid>

                                    <TaskToDoForm Task="Task" Visible="TaskToDoFormVisible" SetVisiblity="SetVisiblity" />
                                </div>
                            </Template>
                        </DxTreeViewNode>
                    </Nodes>
                </DxTreeViewNode>
                <DxTreeViewNode Text="Zaległe">
                    <Nodes>
                        <DxTreeViewNode Text="Dzisiaj">
                            <Template>
                                <div class="grid-container">
                                    <DxGrid @ref="Grid"
                                            PageSize="15"
                                            Data="@OverdueTasks"
                                            KeyFieldName="Id"
                                            ValidationEnabled="false"                                          
                                            ColumnResizeMode="GridColumnResizeMode.NextColumn"
                                            TextWrapEnabled="false"
                                            HighlightRowOnHover="true">

                                        <Columns>
                                            <DxGridDataColumn FieldName="Name" MinWidth="350" />
                                            <DxGridDataColumn FieldName="Status" MinWidth="80" />
                                            <DxGridDataColumn FieldName="Priority" MinWidth="200" />
                                            <DxGridDataColumn FieldName="Project" Width="10%" MinWidth="80">
                                                <EditSettings>
                                                    <DxComboBoxSettings Data="Projects" ValueFieldName="Id" TextFieldName="Name" />
                                                </EditSettings>
                                            </DxGridDataColumn>
                                            <DxGridDataColumn FieldName="DueDate" Width="10%" MinWidth="80" />
                                            <DxGridCommandColumn Width="30px">
                                                <HeaderTemplate Context="headerContext"/>
                                                <CellDisplayTemplate Context="cellContext">
                                                    <div class="grid-cell-align-center">
                                                        <DxButton IconCssClass="grid-icon grid-icon-open"
                                                                  RenderStyle="ButtonRenderStyle.None"
                                                                  Click="@(() => ShowForm(cellContext.VisibleIndex))" />
                                                    </div>
                                                </CellDisplayTemplate>
                                            </DxGridCommandColumn>
                                        </Columns>
                                    </DxGrid>

                                    <TaskToDoForm Task="Task" Visible="TaskToDoFormVisible" SetVisiblity="SetVisiblity" />
                                </div>
                            </Template>
                        </DxTreeViewNode>
                    </Nodes>
                </DxTreeViewNode>
            </Nodes>
        </DxTreeView>
    </div>   
</div>



@code {
    IGrid Grid { get; set; }
    public List<Project> Projects { get; set; } = [];
    public List<TaskToDo> AllTasks { get; set; } = [];
    public List<TaskToDo> TodayTasks { get; set; } = [];
    public List<TaskToDo> ThisWeekTasks { get; set; } = [];
    public List<TaskToDo> NextWeekTasks { get; set; } = [];
    public List<TaskToDo> OverdueTasks { get; set; } = [];
    public TaskToDo Task { get; set; }
    public bool TaskToDoFormVisible { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        Projects = await ProjectService.GetAllProjectsAsync();
        

        AllTasks = await TaskService.GetAllTasksToDoAsync();
        TodayTasks = AllTasks.Where(t => t.DueDate?.Date == DateTime.Today).ToList();

        var startOfWeek = DateTime.Today.AddDays(-((int)DateTime.Today.DayOfWeek - (int)DayOfWeek.Monday));
        var startOfNextDay = DateTime.Today.AddDays(1); 
        var endOfWeek = startOfWeek.AddDays(6); 
        ThisWeekTasks = AllTasks.Where(t => t.DueDate?.Date >= startOfNextDay.Date && t.DueDate?.Date <= endOfWeek.Date).ToList();

        var startOfNextWeek = startOfWeek.AddDays(7); 
        var endOfNextWeek = startOfNextWeek.AddDays(6); 
        NextWeekTasks = AllTasks.Where(t => t.DueDate?.Date >= startOfNextWeek.Date && t.DueDate?.Date <= endOfNextWeek.Date).ToList();

        OverdueTasks = AllTasks.Where(t => t.DueDate?.Date < DateTime.Today && t.Status != Status.Done).ToList();

        await base.OnInitializedAsync();
    }  

    public void SetVisiblity(bool visibility)
    {
        TaskToDoFormVisible = visibility;
        StateHasChanged();
    }

    private void ShowForm(int index)
    {
        Task = Grid.GetDataItem(index) as TaskToDo;
        TaskToDoFormVisible = true;
    }
}