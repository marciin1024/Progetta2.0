@page "/Gantt"
@attribute [Authorize(Roles = "Administrator,StandardUser")]
@rendermode InteractiveServer
@inject ProjectService ProjectService

<h3>Diagram Gantta</h3>
<br />

<div class="h-100 w-100">
  <SfGantt DataSource="@GanttItems" Height="80%" Width="100%" HighlightWeekends="true" TreeColumnIndex="1"
                ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate"
            DurationUnit="DurationUnit.Hour">
        <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate"
                            Duration="Duration" Progress="Progress" Dependency="Predecessor" ParentID="ParentId">
        </GanttTaskFields>
        <GanttColumns>
            <GanttColumn Field="TaskId"></GanttColumn>
            <GanttColumn Field="TaskName" Width="250"></GanttColumn>
            <GanttColumn Field="StartDate"></GanttColumn>
            <GanttColumn Field="EndDate"></GanttColumn>
            <GanttColumn Field="Duration"></GanttColumn>
            <GanttColumn Field="Progress"></GanttColumn>
        </GanttColumns>
        <GanttLabelSettings LeftLabel="TaskName" TValue="GanttItem"> </GanttLabelSettings>
        <GanttSplitterSettings Position="30%"> </GanttSplitterSettings>
        <GanttTemplates TValue="GanttItem">
            <TaskbarTemplate>
                @{
                var task = (context as GanttItem);
                }
                <div class="e-gantt-child-taskbar-inner-div e-gantt-child-taskbar" style="height:22px;width:100%;" tabindex="-1">
                    <div class="e-gantt-child-progressbar-inner-div e-gantt-child-progressbar" style="height:22px;width:@task.Progress%;border-radius:0; ">
                        <span class="e-task-label" style="position:absolute;top:3px;font-size:12px;text-overflow:ellipsis;height:90%;overflow:hidden;">
                            @(task.Progress + "%")
                        </span>
                    </div>
                </div>
            </TaskbarTemplate>
            <ParentTaskbarTemplate>
                @{
                    var task = (context as GanttItem);
                }
                <div class="e-gantt-parent-taskbar-inner-div e-gantt-parent-taskbar" style="height:22px;text-overflow:ellipsis;width:100%;" tabindex="-1">
                    <div class="e-gantt-parent-progressbar-inner-div e-row-expand e-gantt-parent-progressbar" style="height:22px;text-overflow:ellipsis;width:@task.Progress%;border-radius:0;">
                        <span class="e-task-label" style="position:absolute;top:3px;font-size:12px;text-overflow:ellipsis;height:90%;overflow:hidden;">
                            @(task.Progress + "%")
                        </span>
                    </div>
                </div>
            </ParentTaskbarTemplate>
        </GanttTemplates>
    </SfGantt>
</div>

@code {
    private DateTime ProjectStartDate { get; set; } = new DateTime(DateTime.Now.Year, 1, 1);
    private DateTime ProjectEndDate { get; set; } = new DateTime(DateTime.Now.Year, 12, 31);
    private List<GanttItem> GanttItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // List<Project> projects = await ProjectService.GetAllProjectsAsync();

        // GanttItems = new List<GanttItem>();
        // foreach(Project project in projects)
        // {
        //     GanttItem ganttItemProject = new GanttItem
        //     {
        //         TaskId = project.Id,
        //         TaskName = project.Name,
        //         StartDate = project.StartAt,
        //         EndDate = project.DueDate
        //     };
        //     GanttItems.Add(ganttItemProject);

        //     foreach(TaskToDo taskToDo in project.Tasks)
        //     {
        //         GanttItem ganttItemTask = new GanttItem
        //         {
        //             TaskId = taskToDo.Id,
        //             TaskName = taskToDo.Name,
        //             StartDate = project.StartAt,
        //             EndDate = project.DueDate,
        //             ParentId = project.Id
        //         };
        //         GanttItems.Add(ganttItemTask);
        //     }
        // }
    }

    protected override void OnInitialized()
    {
        // GanttItems = DefaultData.ProjectNewData();
        List<Project> projects = ProjectService.GetAllProjects();

        GanttItems = new List<GanttItem>();
        foreach (Project project in projects)
        {


            GanttItem ganttItemProject = new GanttItem
            {
                TaskId = project.Id,
                TaskName = project.Name,
                StartDate = project.StartAt,
                EndDate = project.DueDate
            };
            GanttItems.Add(ganttItemProject);

            foreach (TaskToDo taskToDo in project.Tasks)
            {
                GanttItem ganttItemTask = new GanttItem
                {
                    TaskId = taskToDo.Id,
                    TaskName = taskToDo.Name,
                    StartDate = taskToDo.StartAt,
                    EndDate = taskToDo.DueDate,
                    ParentId = project.Id,
                };

                if(taskToDo.Status == Status.ToDo)
                {
                    ganttItemTask.Progress = 0;
                }

                if (taskToDo.Status == Status.InProgress)
                {
                    ganttItemTask.Progress = new Random().Next(10, 90);
                }

                if (taskToDo.Status == Status.Done)
                {
                    ganttItemTask.Progress = 100;
                }

                GanttItems.Add(ganttItemTask);
            }
        }
    }

    public class GanttItem
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime? StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public DateTime? BaselineStartDate { get; set; }
        public DateTime? BaselineEndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public string Predecessor { get; set; }
        public object ResourceId { get; set; }
        public string Notes { get; set; }
        public string TaskType { get; set; }
        public int? ParentId { get; set; }
    }

    public class DefaultData
    {
       
        public static List<GanttItem> ProjectNewData()
        {
            List<GanttItem> Tasks = new List<GanttItem>() {
                new GanttItem() { TaskId = 1, TaskName = "Product concept", StartDate = new DateTime(2021, 04, 02), EndDate = new DateTime(2021, 04, 08), Duration = "5days" },
                new GanttItem() { TaskId = 2, TaskName = "Define the product usage", StartDate = new DateTime(2021, 04, 02), EndDate = new DateTime(2021, 04, 08), Duration = "3", Progress = 30, ParentId = 1, BaselineStartDate = new DateTime(2021, 04, 02), BaselineEndDate = new DateTime(2021, 04, 02) },
                new GanttItem() { TaskId = 3, TaskName = "Define the target audience", StartDate = new DateTime(2021, 04, 02), EndDate = new DateTime(2021, 04, 04), Progress = 40, Duration = "2Days", ParentId = 1 },
                new GanttItem() { TaskId = 4, TaskName = "Prepare product sketch and notes", StartDate = new DateTime(2021, 04, 05), Duration = "4", Progress = 30, ParentId = 1, Predecessor = "2" },
                new GanttItem() { TaskId = 5, TaskName = "Concept approval", StartDate = new DateTime(2021, 04, 08), EndDate = new DateTime(2021, 04, 08), Duration = "0", ParentId = 1, Predecessor = "3,4" },
                new GanttItem() { TaskId = 6, TaskName = "Market research", StartDate = new DateTime(2021, 04, 09), EndDate = new DateTime(2021, 04, 18), BaselineStartDate = new DateTime(2021, 04, 09), BaselineEndDate = new DateTime(2021, 04, 09), Duration = "4", Progress = 30 },
                new GanttItem() { TaskId = 7, TaskName = "Demand analysis", Duration = "4", Progress = 40, ParentId = 6 },
                new GanttItem() { TaskId = 8, TaskName = "Customer strength", StartDate = new DateTime(2021, 04, 09), EndDate = new DateTime(2021, 04, 12), Duration = "4", Progress = 30, ParentId = 7, Predecessor = "5", BaselineStartDate = new DateTime(2021, 04, 12), BaselineEndDate = new DateTime(2021, 04, 13) },
                new GanttItem() { TaskId = 9, TaskName = "Market opportunity analysis", StartDate = new DateTime(2021, 04, 09), EndDate = new DateTime(2021, 04, 12), Duration = "4", ParentId = 7, Predecessor = "5" },
                new GanttItem() { TaskId = 10, TaskName = "Competitor analysis", StartDate = new DateTime(2021, 04, 15), EndDate = new DateTime(2021, 04, 18), Duration = "4", Progress = 30, ParentId = 6, Predecessor = "7,8" },
                new GanttItem() { TaskId = 11, TaskName = "Product strength analysis", StartDate = new DateTime(2021, 04, 15), EndDate = new DateTime(2021, 04, 18), Duration = "4", Progress = 40, ParentId = 6, Predecessor = "9" },
                new GanttItem() { TaskId = 12, TaskName = "Research completed", StartDate = new DateTime(2021, 04, 18), EndDate = new DateTime(2021, 04, 18), Duration = "0", Progress = 30, ParentId = 6, Predecessor = "10" },
                new GanttItem() { TaskId = 13, TaskName = "Product design and development", StartDate = new DateTime(2021, 04, 19), EndDate = new DateTime(2021, 05, 16), Duration = "20" },
                new GanttItem() { TaskId = 14, TaskName = "Functionality design", StartDate = new DateTime(2021, 04, 19), EndDate = new DateTime(2021, 04, 23), Duration = "4", Progress = 30, ParentId = 13, Predecessor = "12" },
                new GanttItem() { TaskId = 15, TaskName = "Quality design", StartDate = new DateTime(2021, 04, 19), EndDate = new DateTime(2021, 04, 23), Duration = "3", Progress = 40, ParentId = 13, Predecessor = "12" },
                new GanttItem() { TaskId = 16, TaskName = "Define reliability", StartDate = new DateTime(2021, 04, 24), EndDate = new DateTime(2021, 04, 25), Duration = "4", Progress = 30, ParentId = 13, Predecessor = "15" },
                new GanttItem() { TaskId = 17, TaskName = "Identifying raw materials", StartDate = new DateTime(2021, 04, 24), EndDate = new DateTime(2021, 04, 25), Duration = "2", ParentId = 13, Predecessor = "15" },
                new GanttItem() { TaskId = 18, TaskName = "Define cost plan", StartDate = new DateTime(2021, 04, 26), EndDate = new DateTime(2021, 04, 29), Duration = "2", Progress = 30, ParentId = 13, Predecessor = "17" },
                new GanttItem() { TaskId = 19, TaskName = "Estimate manufacturing cost", StartDate = new DateTime(2021, 04, 26), EndDate = new DateTime(2021, 04, 29), Duration = "3", Progress = 40, ParentId = 18, Predecessor = "17" },
                new GanttItem() { TaskId = 20, TaskName = "Estimate selling cost", StartDate = new DateTime(2021, 04, 26), EndDate = new DateTime(2021, 04, 29), Duration = "3", Progress = 30, ParentId = 18, Predecessor = "17" },
                new GanttItem() { TaskId = 21, TaskName = "Development of final design", StartDate = new DateTime(2021, 04, 30), EndDate = new DateTime(2021, 05, 08), Duration="7", ParentId=13 },
                new GanttItem() { TaskId = 22, TaskName = "Develop dimensions and design", StartDate = new DateTime(2021, 04, 30), EndDate = new DateTime(2021, 05, 01), Duration = "4", Progress = 30, ParentId=21, Predecessor="19,20" },
                new GanttItem() { TaskId = 23, TaskName = "Develop designs to meet industry", StartDate = new DateTime(2021, 05, 02), EndDate = new DateTime(2021, 05, 03), Duration = "3", Progress = 40, ParentId = 21, Predecessor="22" },
                new GanttItem() { TaskId = 24, TaskName = "Include all the details", StartDate = new DateTime(2021, 05, 06), EndDate = new DateTime(2021, 05, 08), Duration = "4", Progress = 30, ParentId = 21, Predecessor="23" },
                new GanttItem() { TaskId = 25, TaskName = "CAD - Computer Aided Design", StartDate = new DateTime(2021, 05, 09), EndDate = new DateTime(2021, 05, 13), Duration="3", Predecessor="24" },
                new GanttItem() { TaskId = 26, TaskName = "CAM - Computer Aided Manufacturing", StartDate = new DateTime(2021, 05, 14), EndDate = new DateTime(2021, 05, 16), Duration = "4", Progress = 30, Predecessor="25" },
                new GanttItem() { TaskId = 27, TaskName = "Finalize the design", StartDate = new DateTime(2021, 04, 16), EndDate = new DateTime(2021, 04, 16), Duration = "0", Progress = 40, Predecessor="26" },
                new GanttItem() { TaskId = 28, TaskName = "Prototype testing", StartDate = new DateTime(2021, 05, 17), EndDate = new DateTime(2021, 05, 22), Duration = "4", Progress = 30, Predecessor="27" },
                new GanttItem() { TaskId = 29, TaskName = "Include feedback", StartDate = new DateTime(2021, 05, 17), EndDate = new DateTime(2021, 05, 22), Duration="4", Predecessor="28ss" },
                new GanttItem() { TaskId = 30, TaskName = "Manufacturing", StartDate = new DateTime(2021, 05, 23), EndDate = new DateTime(2021, 05, 29), Duration = "5", Progress = 30, Predecessor="28,29" },
                new GanttItem() { TaskId = 31, TaskName = "Assembling material into finished goods", StartDate = new DateTime(2021, 05, 30), EndDate = new DateTime(2021, 06, 05), Duration = "5", Progress = 40, Predecessor="30" },
                new GanttItem() { TaskId = 32, TaskName = "Final product development", StartDate = new DateTime(2021, 06, 06), EndDate = new DateTime(2021, 06, 13), Duration = "6", Progress = 30 },
                new GanttItem() { TaskId = 33, TaskName = "Important improvement", StartDate = new DateTime(2021, 06, 06), EndDate = new DateTime(2021, 06, 10), Duration="3", ParentId=32, Predecessor="31" },
                new GanttItem() { TaskId = 34, TaskName = "Customer testing and feedback", StartDate = new DateTime(2021, 06, 11), EndDate = new DateTime(2021, 06, 13), Duration = "4", Progress = 30, ParentId=32, Predecessor="33" },
                new GanttItem() { TaskId = 35, TaskName = "Final product development", StartDate = new DateTime(2021, 06, 14), EndDate = new DateTime(2021, 06, 19), Duration = "4", Progress = 40 },
                new GanttItem() { TaskId = 36, TaskName = "Important improvement", StartDate = new DateTime(2021, 06, 14), EndDate = new DateTime(2021, 06, 19), Duration = "4", Progress = 30, ParentId = 35, Predecessor="34" },
                new GanttItem() { TaskId = 37, TaskName = "Address any unforeseen issues", StartDate = new DateTime(2021, 06, 14), EndDate = new DateTime(2021, 06, 19), Duration = "4", Progress = 30, Predecessor="36ss", ParentId=35 },
                new GanttItem() { TaskId = 38, TaskName = "Finalize the product ", StartDate = new DateTime(2021, 06, 20), EndDate = new DateTime(2021, 07, 01), Duration = "8", Progress = 40 },
                new GanttItem() { TaskId = 39, TaskName = "Branding the product", StartDate = new DateTime(2021, 06, 20), EndDate = new DateTime(2021, 06, 25), Duration = "4", Progress = 30, ParentId = 38, Predecessor="37" },
                new GanttItem() { TaskId = 40, TaskName="Marketing and presales", StartDate=new DateTime(2021,06,26), EndDate=new DateTime(2021,07,01), ParentId=38, Duration="4", Predecessor="39" }
            };
            return Tasks;
        }
    }
}
