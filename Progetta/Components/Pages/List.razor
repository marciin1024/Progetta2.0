@page "/list"
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject TaskService TaskService
<h3>Lista</h3>
<br />

<DxGrid @ref="Grid"
        PageSize="12"
        Data="DataSource"
        KeyFieldName="Id"
        ValidationEnabled="false"
        EditMode="GridEditMode.EditCell"
        EditModelSaving="Grid_EditModelSaving"
        DataItemDeleting="Grid_DataItemDeleting"
        CustomizeEditModel="Grid_CustomizeEditModel"
        ColumnResizeMode="GridColumnResizeMode.NextColumn"
        ShowGroupPanel="true"
        TextWrapEnabled="false"
        HighlightRowOnHover="true">

    <Columns>
        <DxGridDataColumn FieldName="Name" MinWidth="50" />
        <DxGridDataColumn FieldName="Description" MinWidth="80" />
        <DxGridDataColumn FieldName="Status" MinWidth="80" />
        <DxGridDataColumn FieldName="Priority" MinWidth="200" />
        <DxGridDataColumn FieldName="AssignedToId" MinWidth="150" />
        <DxGridDataColumn FieldName="CreatedById" MinWidth="150" />
        <DxGridDataColumn FieldName="ProjectId" MinWidth="150" />
        <DxGridDataColumn FieldName="StartAt" Width="10%" MinWidth="80" />
        <DxGridDataColumn FieldName="DueDate" Width="10%" MinWidth="80" />
        <DxGridCommandColumn Width="30px">
            <HeaderTemplate>
                <DxButton IconName="Add"
                          RenderStyle="ButtonRenderStyle.Link"
                          aria-label="Add"
                          Click="@(() => Grid.StartEditNewRowAsync())" />
            </HeaderTemplate>
            <CellDisplayTemplate>
                <div class="grid-cell-align-center">
                    <DxButton IconCssClass="grid-icon grid-icon-delete"
                              CssClass="grid-delete-btn"
                              RenderStyle="ButtonRenderStyle.Link"
                              aria-label="Delete"
                              Click="@(() => Grid.ShowRowDeleteConfirmation(context.VisibleIndex))" />
                </div>
            </CellDisplayTemplate>
            <CellEditTemplate>
                <div class="grid-cell-align-center">
                    <DxButton Enabled="false"
                              CssClass="grid-disabled-button"
                              IconCssClass="grid-icon grid-icon-delete"
                              aria-label="Delete"
                              RenderStyle="ButtonRenderStyle.Link" />
                </div>
            </CellEditTemplate>
        </DxGridCommandColumn>
    </Columns>
</DxGrid>

@code {
    IGrid Grid { get; set; }
    IEnumerable<TaskToDo> DataSource { get; set; }
    protected override async Task OnInitializedAsync()
    {
        DataSource = await TaskService.GetAllTasksToDoAsync();
    }
    void Grid_CustomizeEditModel(GridCustomizeEditModelEventArgs e)
    {
        if (e.IsNew)
        {
            var newTask = (TaskToDo)e.EditModel;
            newTask.Name = "Nowe Zadanie";
            newTask.ProjectId = 1;
            newTask.CreatedAt = DateTime.UtcNow;
        }
    }
    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
        var editableTask = (TaskToDo)e.EditModel;
        if (e.IsNew)
            await TaskService.AddTaskAsync(editableTask);
        else
            await TaskService.UpdateTaskToDoAsync(editableTask);
        await UpdateDataAsync();
    }
    async Task Grid_DataItemDeleting(GridDataItemDeletingEventArgs e)
    {
        await TaskService.DeleteTaskToDoAsync((TaskToDo)e.DataItem);
        await UpdateDataAsync();
    }
    async Task UpdateDataAsync()
    {
        DataSource = await TaskService.GetAllTasksToDoAsync();
    }
}


